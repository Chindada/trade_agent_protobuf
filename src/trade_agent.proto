syntax = "proto3";

package trade_agent_protobuf;

option go_package = "pkg/sinopacapi";

message RealTimeTickResponse {
    string exchange          = 1;
    RealTimeTickMessage tick = 2;
}

message RealTimeTickMessage {
    string code              = 1;
    string date_time         = 2;
    double open              = 3;
    double avg_price         = 4;
    double close             = 5;
    double high              = 6;
    double low               = 7;
    double amount            = 8;
    double total_amount      = 9;
    int64 volume             = 10;
    int64 total_volume       = 11;
    int64 tick_type          = 12;
    int64 chg_type           = 13;
    double price_chg         = 14;
    double pct_chg           = 15;
    int64 bid_side_total_vol = 16;
    int64 ask_side_total_vol = 17;
    int64 bid_side_total_cnt = 18;
    int64 ask_side_total_cnt = 19;
    int64 suspend            = 20;
    int64 simtrade           = 21;
}

message HistoryTickResponse {
    string stock_num                 = 1;
    string date                      = 2;
    repeated HistoryTickMessage data = 3;
}

message HistoryTickMessage {
    int64 ts         = 1;
    double close     = 2;
    int64 volume     = 3;
    double bid_price = 4;
    int64 bid_volume = 5;
    double ask_price = 6;
    int64 ask_volume = 7;
    int64 tick_type  = 8;
}

message KbarResponse {
    string stock_num          = 1;
    string start_date         = 2;
    string end_date           = 3;
    repeated KbarMessage data = 4;
}

message KbarMessage {
    int64 ts     = 1;
    double Close = 2;
    double Open  = 3;
    double High  = 4;
    double Low   = 5;
    int64 Volume = 6;
}

message BidAskResponse {
    string exchange       = 1;
    BidAskMessage bid_ask = 2;
}

message BidAskMessage {
    string code                 = 1;
    string date_time            = 2;
    repeated double bid_price   = 3;
    repeated int64 bid_volume   = 4;
    repeated int64 diff_bid_vol = 5;
    repeated double ask_price   = 6;
    repeated int64 ask_volume   = 7;
    repeated int64 diff_ask_vol = 8;
    int64 suspend               = 9;
    int64 simtrade              = 10;
}

message SnapshotResponse {
    repeated SnapshotMessage data = 1;
}

message SnapshotMessage {
    int64 ts                = 1;
    string code             = 2;
    string exchange         = 3;
    double open             = 4;
    double high             = 5;
    double low              = 6;
    double close            = 7;
    string tick_type        = 8;
    double change_price     = 9;
    double change_rate      = 10;
    string change_type      = 11;
    double average_price    = 12;
    int64 volume            = 13;
    int64 total_volume      = 14;
    int64 amount            = 15;
    int64 total_amount      = 16;
    double yesterday_volume = 17;
    double buy_price        = 18;
    double buy_volume       = 19;
    double sell_price       = 20;
    int64 sell_volume       = 21;
    double volume_ratio     = 22;
}

message EventResponse {
    int64 resp_code  = 1;
    int64 event_code = 2;
    string info      = 3;
    string event     = 4;
}

message TradeRecordResponse {
    repeated TradeRecordMessage data = 1;
}

message TradeRecordMessage {
    int64 quantity    = 1;
    double price      = 2;
    string action     = 3;
    string code       = 4;
    string id         = 5;
    string order_time = 6;
    string status     = 7;
}

message VolumeRankResponse {
    repeated VolumeRankMessage data = 1;
}

message VolumeRankMessage {
    string date            = 1;
    string code            = 2;
    string name            = 3;
    int64 ts               = 4;
    double open            = 5;
    double high            = 6;
    double low             = 7;
    double close           = 8;
    double price_range     = 9;
    int64 tick_type        = 10;
    double change_price    = 11;
    int64 change_type      = 12;
    double average_price   = 13;
    int64 volume           = 14;
    int64 total_volume     = 15;
    int64 amount           = 16;
    int64 total_amount     = 17;
    int64 yesterday_volume = 18;
    double volume_ratio    = 19;
    double buy_price       = 20;
    int64 buy_volume       = 21;
    double sell_price      = 22;
    int64 sell_volume      = 23;
    int64 bid_orders       = 24;
    int64 bid_volumes      = 25;
    int64 ask_orders       = 26;
    int64 ask_volumes      = 27;
}

message StockResponse {
    repeated StockMessage stock = 1;
}

message StockMessage {
    string exchange    = 1;
    string category    = 2;
    string code        = 3;
    string name        = 4;
    double reference   = 5;
    string update_date = 6;
    string day_trade   = 7;
}
